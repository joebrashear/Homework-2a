==10869== Memcheck, a memory error detector
==10869== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==10869== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==10869== Command: ./wish tests/19.in
==10869== Parent PID: 10600
==10869== 
==10869== Invalid write of size 8
==10869==    at 0x109F34: process_args (wish.c:288)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10870== Syscall param execve(argv) points to uninitialised byte(s)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10870==    at 0x493D17B: execve (syscall-template.S:78)
==10870==    by 0x10A3A8: process_args (wish.c:370)
==10869==  Address 0x4a50c30 is 0 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10870==    by 0x10A9E2: run_wish (wish.c:526)
==10870==    by 0x10AB40: main (wish.c:566)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10870==  Address 0x4a50b38 is 8 bytes inside a block of size 16 alloc'd
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10870==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10870==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10870==    by 0x109EA5: process_args (wish.c:277)
==10870==    by 0x10A9E2: run_wish (wish.c:526)
==10869== Invalid read of size 8
==10869==    at 0x109F4B: process_args (wish.c:289)
==10870==    by 0x10AB40: main (wish.c:566)
==10870== 
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50c30 is 0 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Invalid read of size 8
==10869==    at 0x109FC0: process_args (wish.c:296)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50c30 is 0 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Invalid write of size 8
==10869==    at 0x109F34: process_args (wish.c:288)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50d30 is 16 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Invalid read of size 8
==10869==    at 0x109F4B: process_args (wish.c:289)
==10872== Syscall param execve(argv) points to uninitialised byte(s)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10872==    at 0x493D17B: execve (syscall-template.S:78)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10872==    by 0x10A3A8: process_args (wish.c:370)
==10872==    by 0x10A66E: process_args (wish.c:422)
==10869==  Address 0x4a50d30 is 16 bytes after a block of size 16 alloc'd
==10872==    by 0x10A9E2: run_wish (wish.c:526)
==10872==    by 0x10AB40: main (wish.c:566)
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10872==  Address 0x4a50c20 is 0 bytes inside a block of size 16 alloc'd
==10872==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10872==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10872==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10872==    by 0x10A66E: process_args (wish.c:422)
==10872==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10872==    by 0x10AB40: main (wish.c:566)
==10872== 
==10869== 
==10872== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10869== Invalid read of size 8
==10869==    at 0x109FC0: process_args (wish.c:296)
==10872==    at 0x493D17B: execve (syscall-template.S:78)
==10872==    by 0x10A3A8: process_args (wish.c:370)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10872==    by 0x10A66E: process_args (wish.c:422)
==10872==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10872==    by 0x10AB40: main (wish.c:566)
==10872==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10869==  Address 0x4a50d30 is 16 bytes after a block of size 16 alloc'd
==10872== 
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Conditional jump or move depends on uninitialised value(s)
==10869==    at 0x483F076: free (vg_replace_malloc.c:884)
==10869==    by 0x109593: free_string_array (wish.c:65)
==10869==    by 0x10A69C: process_args (wish.c:425)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10873== Syscall param execve(argv) points to uninitialised byte(s)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10873==    at 0x493D17B: execve (syscall-template.S:78)
==10869== 
==10873==    by 0x10A3A8: process_args (wish.c:370)
==10869== Invalid read of size 8
==10869==    at 0x109589: free_string_array (wish.c:65)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A69C: process_args (wish.c:425)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A9E2: run_wish (wish.c:526)
==10873==    by 0x10AB40: main (wish.c:566)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10873==  Address 0x4a50d10 is 0 bytes inside a block of size 16 alloc'd
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50d20 is 0 bytes after a block of size 16 alloc'd
==10873==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10873==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10873==    by 0x109EA5: process_args (wish.c:277)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10873==    by 0x10AB40: main (wish.c:566)
==10873== 
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10873== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10873==    at 0x493D17B: execve (syscall-template.S:78)
==10873==    by 0x10A3A8: process_args (wish.c:370)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A66E: process_args (wish.c:422)
==10873==    by 0x10A9E2: run_wish (wish.c:526)
==10873==    by 0x10AB40: main (wish.c:566)
==10873==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10873== 
==10869== Invalid read of size 8
==10869==    at 0x109589: free_string_array (wish.c:65)
==10869==    by 0x10A69C: process_args (wish.c:425)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50c30 is 0 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Conditional jump or move depends on uninitialised value(s)
==10869==    at 0x483F076: free (vg_replace_malloc.c:884)
==10869==    by 0x109593: free_string_array (wish.c:65)
==10869==    by 0x10A69C: process_args (wish.c:425)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== Invalid read of size 8
==10869==    at 0x109589: free_string_array (wish.c:65)
==10869==    by 0x10A69C: process_args (wish.c:425)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869==  Address 0x4a50b40 is 0 bytes after a block of size 16 alloc'd
==10869==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10869==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10869==    by 0x109EA5: process_args (wish.c:277)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== 
==10869== HEAP SUMMARY:
==10869==     in use at exit: 6 bytes in 1 blocks
==10869==   total heap usage: 38 allocs, 37 frees, 5,104 bytes allocated
==10869== 
==10869== 6 bytes in 1 blocks are definitely lost in loss record 1 of 1
==10869==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10869==    by 0x109F33: process_args (wish.c:288)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A66E: process_args (wish.c:422)
==10869==    by 0x10A9E2: run_wish (wish.c:526)
==10869==    by 0x10AB40: main (wish.c:566)
==10869== 
==10869== LEAK SUMMARY:
==10869==    definitely lost: 6 bytes in 1 blocks
==10869==    indirectly lost: 0 bytes in 0 blocks
==10869==      possibly lost: 0 bytes in 0 blocks
==10869==    still reachable: 0 bytes in 0 blocks
==10869==         suppressed: 0 bytes in 0 blocks
==10869== 
==10869== Use --track-origins=yes to see where uninitialised values come from
==10869== For lists of detected and suppressed errors, rerun with: -s
==10869== ERROR SUMMARY: 18 errors from 12 contexts (suppressed: 0 from 0)
