==10733== Memcheck, a memory error detector
==10733== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==10733== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==10733== Command: ./wish tests/11.in
==10733== Parent PID: 10600
==10733== 
==10733== Conditional jump or move depends on uninitialised value(s)
==10733==    at 0x483F076: free (vg_replace_malloc.c:884)
==10733==    by 0x109593: free_string_array (wish.c:65)
==10733==    by 0x10A69C: process_args (wish.c:425)
==10733==    by 0x10A9E2: run_wish (wish.c:526)
==10733==    by 0x10AB40: main (wish.c:566)
==10733== 
==10733== Invalid read of size 8
==10733==    at 0x109589: free_string_array (wish.c:65)
==10733==    by 0x10A69C: process_args (wish.c:425)
==10733==    by 0x10A9E2: run_wish (wish.c:526)
==10733==    by 0x10AB40: main (wish.c:566)
==10733==  Address 0x4a508b8 is 0 bytes after a block of size 24 alloc'd
==10733==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10733==    by 0x109EA5: process_args (wish.c:277)
==10733==    by 0x10A9E2: run_wish (wish.c:526)
==10734== Syscall param execve(argv) points to uninitialised byte(s)
==10733==    by 0x10AB40: main (wish.c:566)
==10733== 
==10734==    at 0x493D17B: execve (syscall-template.S:78)
==10734==    by 0x10A3A8: process_args (wish.c:370)
==10734==    by 0x10A9E2: run_wish (wish.c:526)
==10734==    by 0x10AB40: main (wish.c:566)
==10734==  Address 0x4a508b0 is 16 bytes inside a block of size 24 alloc'd
==10734==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10734==    by 0x109EA5: process_args (wish.c:277)
==10734==    by 0x10A9E2: run_wish (wish.c:526)
==10734==    by 0x10AB40: main (wish.c:566)
==10734== 
==10735== Syscall param execve(argv) points to uninitialised byte(s)
==10735==    at 0x493D17B: execve (syscall-template.S:78)
==10735==    by 0x10A3A8: process_args (wish.c:370)
==10735==    by 0x10A9E2: run_wish (wish.c:526)
==10735==    by 0x10AB40: main (wish.c:566)
==10735==  Address 0x4a50be0 is 16 bytes inside a block of size 24 alloc'd
==10735==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10735==    by 0x109EA5: process_args (wish.c:277)
==10735==    by 0x10A9E2: run_wish (wish.c:526)
==10735==    by 0x10AB40: main (wish.c:566)
==10735== 
==10736== Syscall param execve(argv) points to uninitialised byte(s)
==10736==    at 0x493D17B: execve (syscall-template.S:78)
==10736==    by 0x10A3A8: process_args (wish.c:370)
==10736==    by 0x10A9E2: run_wish (wish.c:526)
==10736==    by 0x10AB40: main (wish.c:566)
==10736==  Address 0x4a51078 is 24 bytes inside a block of size 32 alloc'd
==10736==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10736==    by 0x109EA5: process_args (wish.c:277)
==10736==    by 0x10A9E2: run_wish (wish.c:526)
==10736==    by 0x10AB40: main (wish.c:566)
==10736== 
==10733== 
==10733== HEAP SUMMARY:
==10733==     in use at exit: 0 bytes in 0 blocks
==10733==   total heap usage: 48 allocs, 48 frees, 5,262 bytes allocated
==10733== 
==10733== All heap blocks were freed -- no leaks are possible
==10733== 
==10733== Use --track-origins=yes to see where uninitialised values come from
==10733== For lists of detected and suppressed errors, rerun with: -s
==10733== ERROR SUMMARY: 9 errors from 2 contexts (suppressed: 0 from 0)
