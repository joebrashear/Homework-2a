==10894== Memcheck, a memory error detector
==10894== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==10894== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==10894== Command: ./wish tests/20.in
==10894== Parent PID: 10600
==10894== 
==10894== Invalid write of size 8
==10894==    at 0x109F34: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51370 is 16 bytes after a block of size 16 alloc'd
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== Invalid read of size 8
==10894==    at 0x109F4B: process_args (wish.c:289)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51370 is 16 bytes after a block of size 16 alloc'd
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10907== Syscall param execve(argv) points to uninitialised byte(s)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10907==    at 0x493D17B: execve (syscall-template.S:78)
==10907==    by 0x10A3A8: process_args (wish.c:370)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10AB40: main (wish.c:566)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10907==  Address 0x4a51268 is 8 bytes inside a block of size 16 alloc'd
==10907==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894== Invalid read of size 8
==10894==    at 0x109FC0: process_args (wish.c:296)
==10907==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10907==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10AB40: main (wish.c:566)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51370 is 16 bytes after a block of size 16 alloc'd
==10907== 
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10907== Syscall param execve(argv) points to uninitialised byte(s)
==10894== 
==10907==    at 0x493D17B: execve (syscall-template.S:78)
==10907==    by 0x10A4E6: process_args (wish.c:390)
==10907==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10AB40: main (wish.c:566)
==10907==  Address 0x4a51268 is 8 bytes inside a block of size 16 alloc'd
==10907==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10907==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10907==    by 0x109EA5: process_args (wish.c:277)
==10907==    by 0x10A9E2: run_wish (wish.c:526)
==10907==    by 0x10AB40: main (wish.c:566)
==10907== 
==10894== Invalid write of size 8
==10894==    at 0x109F34: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51480 is 16 bytes before a block of size 6 alloc'd
==10894==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10894==    by 0x109F33: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== Invalid read of size 8
==10894==    at 0x109F4B: process_args (wish.c:289)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51480 is 16 bytes before a block of size 6 alloc'd
==10894==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10894==    by 0x109F33: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10909== Syscall param execve(argv) points to uninitialised byte(s)
==10894== Invalid read of size 8
==10894==    at 0x109FC0: process_args (wish.c:296)
==10909==    at 0x493D17B: execve (syscall-template.S:78)
==10909==    by 0x10A3A8: process_args (wish.c:370)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10909==    by 0x10AB40: main (wish.c:566)
==10909==  Address 0x4a51350 is 0 bytes inside a block of size 16 alloc'd
==10894==  Address 0x4a51480 is 16 bytes before a block of size 6 alloc'd
==10894==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10909==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10909==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109F33: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x109EA5: process_args (wish.c:277)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10AB40: main (wish.c:566)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10909== 
==10909== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10909==    at 0x493D17B: execve (syscall-template.S:78)
==10909==    by 0x10A3A8: process_args (wish.c:370)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10AB40: main (wish.c:566)
==10909==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10909== 
==10909== Syscall param execve(argv) points to uninitialised byte(s)
==10909==    at 0x493D17B: execve (syscall-template.S:78)
==10909==    by 0x10A4E6: process_args (wish.c:390)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10AB40: main (wish.c:566)
==10909==  Address 0x4a51350 is 0 bytes inside a block of size 16 alloc'd
==10909==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10909==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10909==    by 0x109EA5: process_args (wish.c:277)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10AB40: main (wish.c:566)
==10894== Conditional jump or move depends on uninitialised value(s)
==10909== 
==10894==    at 0x483F076: free (vg_replace_malloc.c:884)
==10909== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10909==    at 0x493D17B: execve (syscall-template.S:78)
==10894==    by 0x109593: free_string_array (wish.c:65)
==10909==    by 0x10A4E6: process_args (wish.c:390)
==10909==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A69C: process_args (wish.c:425)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10909==    by 0x10A9E2: run_wish (wish.c:526)
==10909==    by 0x10AB40: main (wish.c:566)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10909==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10909== 
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== Invalid read of size 8
==10894==    at 0x109589: free_string_array (wish.c:65)
==10894==    by 0x10A69C: process_args (wish.c:425)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51450 is 0 bytes after a block of size 16 alloc'd
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10910== Syscall param execve(argv) points to uninitialised byte(s)
==10910==    at 0x493D17B: execve (syscall-template.S:78)
==10910==    by 0x10A3A8: process_args (wish.c:370)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910==  Address 0x4a51440 is 0 bytes inside a block of size 16 alloc'd
==10910==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10910==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10910==    by 0x109EA5: process_args (wish.c:277)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910== 
==10910== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10910==    at 0x493D17B: execve (syscall-template.S:78)
==10910==    by 0x10A3A8: process_args (wish.c:370)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10910== 
==10910== Syscall param execve(argv) points to uninitialised byte(s)
==10910==    at 0x493D17B: execve (syscall-template.S:78)
==10910==    by 0x10A4E6: process_args (wish.c:390)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910==  Address 0x4a51440 is 0 bytes inside a block of size 16 alloc'd
==10910==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10910==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10910==    by 0x109EA5: process_args (wish.c:277)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910== 
==10910== Syscall param execve(argv[0]) points to unaddressable byte(s)
==10910==    at 0x493D17B: execve (syscall-template.S:78)
==10910==    by 0x10A4E6: process_args (wish.c:390)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A66E: process_args (wish.c:422)
==10910==    by 0x10A9E2: run_wish (wish.c:526)
==10910==    by 0x10AB40: main (wish.c:566)
==10910==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10910== 
==10894== Invalid read of size 8
==10894==    at 0x109589: free_string_array (wish.c:65)
==10894==    by 0x10A69C: process_args (wish.c:425)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51360 is 0 bytes after a block of size 16 alloc'd
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== Conditional jump or move depends on uninitialised value(s)
==10894==    at 0x483F076: free (vg_replace_malloc.c:884)
==10894==    by 0x109593: free_string_array (wish.c:65)
==10894==    by 0x10A69C: process_args (wish.c:425)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== Invalid read of size 8
==10894==    at 0x109589: free_string_array (wish.c:65)
==10894==    by 0x10A69C: process_args (wish.c:425)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894==  Address 0x4a51270 is 0 bytes after a block of size 16 alloc'd
==10894==    at 0x483C76F: malloc (vg_replace_malloc.c:392)
==10894==    by 0x4841722: realloc (vg_replace_malloc.c:1451)
==10894==    by 0x109EA5: process_args (wish.c:277)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10923== Syscall param execve(argv) points to uninitialised byte(s)
==10923==    at 0x493D17B: execve (syscall-template.S:78)
==10923==    by 0x10A3A8: process_args (wish.c:370)
==10923==    by 0x10A9E2: run_wish (wish.c:526)
==10923==    by 0x10AB40: main (wish.c:566)
==10923==  Address 0x4a51770 is 16 bytes inside a block of size 24 alloc'd
==10923==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10923==    by 0x109EA5: process_args (wish.c:277)
==10923==    by 0x10A9E2: run_wish (wish.c:526)
==10923==    by 0x10AB40: main (wish.c:566)
==10923== 
==10924== Syscall param execve(argv) points to uninitialised byte(s)
==10924==    at 0x493D17B: execve (syscall-template.S:78)
==10924==    by 0x10A3A8: process_args (wish.c:370)
==10924==    by 0x10A9E2: run_wish (wish.c:526)
==10924==    by 0x10AB40: main (wish.c:566)
==10924==  Address 0x4a51aa0 is 16 bytes inside a block of size 24 alloc'd
==10924==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10924==    by 0x109EA5: process_args (wish.c:277)
==10924==    by 0x10A9E2: run_wish (wish.c:526)
==10924==    by 0x10AB40: main (wish.c:566)
==10924== 
==10925== Syscall param execve(argv) points to uninitialised byte(s)
==10925==    at 0x493D17B: execve (syscall-template.S:78)
==10925==    by 0x10A3A8: process_args (wish.c:370)
==10925==    by 0x10A9E2: run_wish (wish.c:526)
==10925==    by 0x10AB40: main (wish.c:566)
==10925==  Address 0x4a51dd0 is 16 bytes inside a block of size 24 alloc'd
==10925==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10925==    by 0x109EA5: process_args (wish.c:277)
==10925==    by 0x10A9E2: run_wish (wish.c:526)
==10925==    by 0x10AB40: main (wish.c:566)
==10925== 
==10926== Syscall param execve(argv) points to uninitialised byte(s)
==10926==    at 0x493D17B: execve (syscall-template.S:78)
==10926==    by 0x10A3A8: process_args (wish.c:370)
==10926==    by 0x10A9E2: run_wish (wish.c:526)
==10926==    by 0x10AB40: main (wish.c:566)
==10926==  Address 0x4a52268 is 24 bytes inside a block of size 32 alloc'd
==10926==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10926==    by 0x109EA5: process_args (wish.c:277)
==10926==    by 0x10A9E2: run_wish (wish.c:526)
==10926==    by 0x10AB40: main (wish.c:566)
==10926== 
==10927== Syscall param execve(argv) points to uninitialised byte(s)
==10927==    at 0x493D17B: execve (syscall-template.S:78)
==10927==    by 0x10A3A8: process_args (wish.c:370)
==10927==    by 0x10A9E2: run_wish (wish.c:526)
==10927==    by 0x10AB40: main (wish.c:566)
==10927==  Address 0x4a526f8 is 24 bytes inside a block of size 32 alloc'd
==10927==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10927==    by 0x109EA5: process_args (wish.c:277)
==10927==    by 0x10A9E2: run_wish (wish.c:526)
==10927==    by 0x10AB40: main (wish.c:566)
==10927== 
==10928== Syscall param execve(argv) points to uninitialised byte(s)
==10928==    at 0x493D17B: execve (syscall-template.S:78)
==10928==    by 0x10A3A8: process_args (wish.c:370)
==10928==    by 0x10A9E2: run_wish (wish.c:526)
==10928==    by 0x10AB40: main (wish.c:566)
==10928==  Address 0x4a52b88 is 24 bytes inside a block of size 32 alloc'd
==10928==    at 0x48416C6: realloc (vg_replace_malloc.c:1451)
==10928==    by 0x109EA5: process_args (wish.c:277)
==10928==    by 0x10A9E2: run_wish (wish.c:526)
==10928==    by 0x10AB40: main (wish.c:566)
==10928== 
==10894== 
==10894== HEAP SUMMARY:
==10894==     in use at exit: 12 bytes in 2 blocks
==10894==   total heap usage: 127 allocs, 125 frees, 6,651 bytes allocated
==10894== 
==10894== 6 bytes in 1 blocks are definitely lost in loss record 1 of 2
==10894==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10894==    by 0x109F33: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== 6 bytes in 1 blocks are definitely lost in loss record 2 of 2
==10894==    at 0x484147B: calloc (vg_replace_malloc.c:1340)
==10894==    by 0x109F33: process_args (wish.c:288)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A66E: process_args (wish.c:422)
==10894==    by 0x10A9E2: run_wish (wish.c:526)
==10894==    by 0x10AB40: main (wish.c:566)
==10894== 
==10894== LEAK SUMMARY:
==10894==    definitely lost: 12 bytes in 2 blocks
==10894==    indirectly lost: 0 bytes in 0 blocks
==10894==      possibly lost: 0 bytes in 0 blocks
==10894==    still reachable: 0 bytes in 0 blocks
==10894==         suppressed: 0 bytes in 0 blocks
==10894== 
==10894== Use --track-origins=yes to see where uninitialised values come from
==10894== For lists of detected and suppressed errors, rerun with: -s
==10894== ERROR SUMMARY: 37 errors from 13 contexts (suppressed: 0 from 0)
